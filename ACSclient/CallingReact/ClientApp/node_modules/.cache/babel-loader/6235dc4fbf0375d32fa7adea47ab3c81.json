{"ast":null,"code":"import React from 'react';\nimport { BaseProvider } from '../common/BaseComposite';\nimport { ChatAdapterProvider } from './adapter/ChatAdapterProvider';\nimport { chatScreenContainerStyle } from './styles/Chat.styles';\nimport { ChatScreen } from './ChatScreen';\n/**\n * A customizable UI composite for the chat experience.\n *\n * @remarks Chat composite min width and height are respectively 19.5rem and 20rem (312px and 320px, with default rem at 16px)\n *\n * @public\n */\n\nexport const ChatComposite = props => {\n  const {\n    adapter,\n    options,\n    onFetchAvatarPersonaData,\n    onRenderTypingIndicator,\n    onRenderMessage,\n    onFetchParticipantMenuItems\n  } = props;\n  /**\n   * @TODO Remove this function and pass the props directly when file-sharing is promoted to stable.\n   * @private\n   */\n  // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n\n  const fileSharingOptions = () => {\n    return {};\n  };\n\n  return React.createElement(\"div\", {\n    className: chatScreenContainerStyle\n  }, React.createElement(BaseProvider, Object.assign({}, props), React.createElement(ChatAdapterProvider, {\n    adapter: adapter\n  }, React.createElement(ChatScreen, Object.assign({\n    options: options,\n    onFetchAvatarPersonaData: onFetchAvatarPersonaData,\n    onRenderTypingIndicator: onRenderTypingIndicator,\n    onRenderMessage: onRenderMessage,\n    onFetchParticipantMenuItems: onFetchParticipantMenuItems\n  }, fileSharingOptions())))));\n}; //# sourceMappingURL=ChatComposite.js.map","map":null,"metadata":{},"sourceType":"module"}