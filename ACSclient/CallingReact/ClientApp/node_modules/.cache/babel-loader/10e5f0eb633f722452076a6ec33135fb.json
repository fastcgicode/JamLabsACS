{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport React, { createContext, useContext } from 'react';\nimport { ThemeProvider, getTheme, mergeThemes, mergeStyles } from '@fluentui/react';\nimport { mergeThemes as mergeNorthstarThemes, Provider, teamsTheme } from '@fluentui/react-northstar';\nimport { lightTheme } from './themes';\nconst wrapper = mergeStyles({\n  height: '100%',\n  width: '100%',\n  overflow: 'auto'\n});\nconst defaultTheme = mergeThemes(getTheme(), lightTheme);\n/** Theme context for library's react components */\n\nconst ThemeContext = createContext(defaultTheme);\nconst initialFluentNorthstarTheme = mergeNorthstarThemes(teamsTheme, {\n  componentVariables: {\n    // suppressing chat message links style from teamsTheme to get better styling from Fluent UI Link\n    ChatMessage: {\n      linkColor: undefined,\n      linkColorMine: undefined\n    }\n  },\n  componentStyles: {\n    ChatMessage: {\n      root: {\n        lineHeight: '1.4286'\n      }\n    }\n  },\n  fontFaces: [],\n  // suppressing font faces from teamsTheme as recommended by FluentUI N* to avoid font styling to other elements\n  siteVariables: {\n    // suppressing body styles from teamsTheme to avoid inherited styling to other elements\n    bodyPadding: undefined,\n    bodyFontSize: undefined,\n    bodyFontFamily: undefined,\n    bodyBackground: undefined,\n    bodyColor: undefined,\n    bodyLineHeight: undefined\n  }\n});\n/**\n * Provider to apply a Fluent theme across this library's react components.\n *\n * @remarks Components in this library are composed primarily from [Fluent UI](https://developer.microsoft.com/fluentui#/controls/web),\n * controls, and also from [Fluent React Northstar](https://fluentsite.z22.web.core.windows.net/0.53.0) controls.\n * This provider handles applying any theme provided to both the underlying Fluent UI controls, as well as the Fluent React Northstar controls.\n *\n * @public\n */\n\nexport const FluentThemeProvider = props => {\n  const {\n    fluentTheme,\n    rtl,\n    children\n  } = props;\n  let fluentUITheme = mergeThemes(defaultTheme, fluentTheme); // merge in rtl from FluentThemeProviderProps\n\n  fluentUITheme = mergeThemes(fluentUITheme, {\n    rtl\n  });\n  const fluentNorthstarTheme = mergeNorthstarThemes(initialFluentNorthstarTheme, {\n    componentVariables: {\n      Chat: {\n        backgroundColor: fluentUITheme.palette.white\n      },\n      ChatMessage: {\n        authorColor: fluentUITheme.palette.neutralPrimary,\n        contentColor: fluentUITheme.palette.neutralPrimary,\n        backgroundColor: fluentUITheme.palette.neutralLighter,\n        backgroundColorMine: fluentUITheme.palette.themeLight\n      }\n    },\n    componentStyles: {\n      ChatMessage: {\n        timestamp: {\n          WebkitTextFillColor: fluentUITheme.palette.neutralSecondary\n        }\n      }\n    } // add more northstar components to align with Fluent UI theme\n\n  });\n  return React.createElement(ThemeContext.Provider, {\n    value: fluentUITheme\n  }, React.createElement(ThemeProvider, {\n    theme: fluentUITheme,\n    className: wrapper\n  }, React.createElement(Provider, {\n    theme: fluentNorthstarTheme,\n    className: wrapper,\n    rtl: rtl\n  }, children)));\n};\n/**\n * React hook to access theme\n *\n * @public\n */\n\nexport const useTheme = () => useContext(ThemeContext); //# sourceMappingURL=FluentThemeProvider.js.map","map":null,"metadata":{},"sourceType":"module"}