{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { MicOff20Filled, CallMissed20Filled, MicOn20Filled, Speaker220Filled, Video20Filled, VideoOff20Filled, WifiWarning20Filled, Info20Filled, PersonDelete20Filled, CallEnd20Filled } from '@fluentui/react-icons';\n/* @conditional-compile-remove(call-with-chat-composite) */\n\nimport { CameraSwitch24Regular, MicOn20Regular, People20Regular, Speaker220Regular, Chat20Regular, Chat20Filled } from '@fluentui/react-icons';\nimport { DEFAULT_COMPONENT_ICONS } from \"../../../../react-components/src\";\nimport React from 'react'; // eslint-disable-next-line no-restricted-imports\n\nimport { FontIcon, mergeStyles, Text } from '@fluentui/react';\n\nconst CoffeeIcon = () => React.createElement(Text, {\n  className: mergeStyles(coffeeIconStyle),\n  \"aria-hidden\": true\n}, \"\\u2615\");\n\nconst coffeeIconStyle = {\n  // Fluent wraps all icons with <i> so we must force the fontStyle back to normal.\n  fontStyle: 'normal',\n  // By default our icons are 20px x 20px (for 1rem = 16px), make this a bit bigger for lobby.\n  fontSize: '2rem'\n};\n/**\n * The default set of icons used by the composites directly (i.e. not via the components defined in this library).\n *\n * @public\n */\n\nexport const COMPOSITE_ONLY_ICONS = {\n  /* @conditional-compile-remove(call-with-chat-composite) */\n  ChevronLeft: React.createElement(FontIcon, {\n    iconName: \"ChevronLeft\"\n  }),\n\n  /* @conditional-compile-remove(call-with-chat-composite) */\n  Link: React.createElement(FontIcon, {\n    iconName: \"Link\"\n  }),\n  LobbyScreenConnectingToCall: React.createElement(CoffeeIcon, null),\n  LobbyScreenWaitingToBeAdmitted: React.createElement(CoffeeIcon, null),\n  LocalDeviceSettingsCamera: React.createElement(Video20Filled, null),\n  LocalDeviceSettingsMic: React.createElement(MicOn20Filled, null),\n  LocalDeviceSettingsSpeaker: React.createElement(Speaker220Filled, null),\n  LocalPreviewPlaceholder: React.createElement(VideoOff20Filled, null),\n\n  /* @conditional-compile-remove(call-with-chat-composite) @conditional-compile-remove(local-camera-switcher) */\n  LocalCameraSwitch: React.createElement(CameraSwitch24Regular, null),\n\n  /* @conditional-compile-remove(call-with-chat-composite) */\n  ControlBarChatButtonActive: React.createElement(Chat20Filled, null),\n\n  /* @conditional-compile-remove(call-with-chat-composite) */\n  ControlBarChatButtonInactive: React.createElement(Chat20Regular, null),\n\n  /* @conditional-compile-remove(call-with-chat-composite) */\n  ControlBarPeopleButton: React.createElement(People20Regular, null),\n\n  /* @conditional-compile-remove(call-with-chat-composite) */\n  MoreDrawerMicrophones: React.createElement(MicOn20Regular, null),\n\n  /* @conditional-compile-remove(call-with-chat-composite) */\n  MoreDrawerPeople: React.createElement(People20Regular, null),\n\n  /* @conditional-compile-remove(call-with-chat-composite) */\n  MoreDrawerSpeakers: React.createElement(Speaker220Regular, null),\n\n  /* @conditional-compile-remove(call-with-chat-composite) */\n  MoreDrawerSelectedMicrophone: React.createElement(MicOn20Filled, null),\n\n  /* @conditional-compile-remove(call-with-chat-composite) */\n  MoreDrawerSelectedSpeaker: React.createElement(Speaker220Filled, null),\n  Muted: React.createElement(MicOff20Filled, null),\n  NetworkReconnectIcon: React.createElement(CallMissed20Filled, null),\n  NoticePageAccessDeniedTeamsMeeting: React.createElement(PersonDelete20Filled, null),\n  NoticePageJoinCallFailedDueToNoNetwork: React.createElement(WifiWarning20Filled, null),\n  NoticePageLeftCall: React.createElement(CallEnd20Filled, null),\n  NoticePageRemovedFromCall: React.createElement(Info20Filled, null)\n};\n/**\n * The default set of icons that are available to used in the Composites.\n *\n * @public\n */\n\nexport const DEFAULT_COMPOSITE_ICONS = Object.assign(Object.assign({}, DEFAULT_COMPONENT_ICONS), COMPOSITE_ONLY_ICONS);\n/**\n * Icon wrapper to use when including customizable icons inside the ChatComposite.\n * This wrapper ensures the icon name is being type-checked helping ensure no typos\n * and ensure that icon is customizable through the composite API.\n *\n * @private\n */\n\nexport const ChatCompositeIcon = props => React.createElement(FontIcon, Object.assign({}, props));\n/**\n * Icon wrapper to use when including customizable icons inside the CallComposite.\n * This wrapper ensures the icon name is being type-checked helping ensure no typos\n * and ensure that icon is customizable through the composite API.\n *\n * @private\n */\n\nexport const CallCompositeIcon = props => React.createElement(FontIcon, Object.assign({}, props));\n/**\n * Icon wrapper to use when including customizable icons inside the CallWithChatComposite.\n * This wrapper ensures the icon name is being type-checked helping ensure no typos\n * and ensure that icon is customizable through the composite API.\n *\n * @private\n */\n\nexport const CallWithChatCompositeIcon = props => React.createElement(FontIcon, Object.assign({}, props)); //# sourceMappingURL=icons.js.map","map":null,"metadata":{},"sourceType":"module"}